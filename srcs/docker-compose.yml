version: '3'

services:
  nginx:
    container_name: nginx
    image: nginx
    build: ./requirements/nginx/.
    depends_on:
      - wordpress
    ports:
      - "80:80"
      - "443:443"
    networks:
      - docker-network
    volumes:
      - wordpress:/var/www/html
    environment:
      - CERTS_certs=${CERTS_certs}
      - CERTS_key=${CERTS_key}
  wordpress:
    container_name: wordpress
    image: wordpress
    build: ./requirements/wordpress/.
    depends_on:
      - mariadb
    ports:
      - "9000:9000"
    volumes:
      - wordpress:/var/www/html
    networks:
      - docker-network
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - MYSQL_DB=${MYSQL_DB}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASS}
      - WORDPRESS_TITLE=${WORDPRESS_TITLE}
      - WORDPRESS_ADMIN_USER=${WORDPRESS_ADMIN_USER}
      - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
      - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
      - WORDPRESS_USER=${WORDPRESS_USER}
      - WORDPRESS_USER_EMAIL=${WORDPRESS_USER_EMAIL}
      - WORDPRESS_USER_PASSWORD=${WORDPRESS_USER_PASSWORD}
      - WORDPRESS_USER_ROLE=${WORDPRESS_USER_ROLE}
  mariadb:
    container_name: mariadb
    build: ./requirements/mariadb/.
    image: mariadb
    volumes:
      - mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DB=${MYSQL_DB}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASS}
    networks:
      - docker-network
    restart: always
    ports:
      - "3306:3306"

volumes:
  wordpress:
    driver: local
    driver_opts:
      type: none
      device: /home/osboxes/data/wordpress
      o: bind
  mariadb:
    driver: local
    driver_opts:
      type: none
      device: /home/osboxes/data/db
      o: bind

networks:
  docker-network:
    driver: bridge

